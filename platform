#!/bin/sh
### BEGIN INIT INFO
#
# Provides:      ddns
# Required-Start:       $local_fs  $remote_fs
# Required-Stop:        $local_fs  $remote_fs
# Default-Start:        2 3 4 5
# Default-Stop:         0 1 6
# Short-Description:    initscript
# Description:  This file should be used to construct scripts to be placed in /etc/init.d.
#
### END INIT INFO

## Fill in name of program here.
PROG="platform"
MSG_PREFIX=" *"
PROG_BASE="/data/app/$PROG"
PROG_PATH="$PROG_BASE/bin/$PROG" #::# Not need, but sometimes helpful (if $PROG resides in /opt for example).
PROG_ARGS=""
PROG_PID="$PROG_BASE/logs/$PROG.pid"
PROG_LOG="$PROG_BASE/logs/$PROG.log"

start() {
	PROG_STATUS=0
#check process status
    if [ -e "$PROG_PID" ]; then
		for line in `cat $PROG_PID`
		do
			count=`ps -ef |grep $line |grep -v "grep" |wc -l`
    		if [ $count -gt 0 ]; then
        		PROG_STATUS=1
       			break;
    		fi
		done
	fi

	if [ $PROG_STATUS -eq 1 ]; then
		## Program is running, exit with error.
		echo "$MSG_PREFIX $PROG is currently running..."
		exit 1
    else
        ## Change from /dev/null to something like /var/log/$PROG if you want to save output.
        $PROG_PATH $PROG_ARGS >>  $PROG_LOG &
        echo "$MSG_PREFIX $PROG started"
    fi
}

stop() {
    if [ -e "$PROG_PID" ]; then
        ## Program is running, so stop it
      	kill -9 $(cat $PROG_PID)
		sleep 1
       	echo "$MSG_PREFIX $PROG stopped"
    else
        ## Program is not running, exit with error.
        echo "$MSG_PREFIX $PROG not started"
        exit 1
    fi
}


case "$1" in
    start)
        start
        exit 0
    ;;
    stop)
        stop
        exit 0
    ;;
    reload|restart|force-reload)
        stop
        start
        exit 0
    ;;
    **)
        echo "Usage: $0 {start|stop|reload}" 1>&2
        exit 1
    ;;
esac
